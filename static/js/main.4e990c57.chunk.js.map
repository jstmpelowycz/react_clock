{"version":3,"sources":["addons/Randomizer.ts","components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Randomizer","names","getRandomName","Math","floor","random","length","Clock","getCurrentDate","Date","toLocaleTimeString","timerId","state","time","this","setInterval","tick","clockName","props","console","log","clearInterval","setState","className","React","Component","App","isClockVisible","showClock","hideClock","renameClock","Button","variant","onClick","Card","ReactDOM","render","document","getElementById"],"mappings":"wOAAaA,EAAb,kCAAaA,EACYC,MAAQ,CAC7B,UACA,OACA,QACA,oBACA,KACA,UACA,QACA,QACA,OACA,MACA,aACA,SAbSD,EAgBJE,cAAgB,WACrB,OAAQF,EAAWC,MACjBE,KAAKC,MAAMD,KAAKE,SAAWL,EAAWC,MAAMK,U,WCRrCC,EAAb,4MAEEC,eAAiB,kBACf,IAAIC,MAAOC,mBAAmB,UAHlC,EAMEC,aANF,IAQEC,MAAQ,CACNC,KAAM,EAAKL,kBATf,uDAYE,WAAqB,IAAD,OAClBM,KAAKH,QAAUI,aACb,kBAAM,EAAKC,SACX,OAfN,gCAmBE,YAAoD,IAA/BC,EAA8B,EAA9BA,UACfA,IAAcH,KAAKI,MAAMD,WAE3BE,QAAQC,IACN,uDACUH,EADV,eAC0BH,KAAKI,MAAMD,cAxB7C,kCA6BE,WACMH,KAAKH,SACPU,cAAcP,KAAKH,WA/BzB,kBAmCE,WACEG,KAAKQ,SAAS,CACZT,KAAMC,KAAKN,qBArCjB,oBAyCE,WACE,OACE,qBAAKe,UAAU,QAAf,SACE,oBAAIA,UAAU,cAAd,SACGT,KAAKF,MAAMC,aA7CtB,GAA2BW,IAAMC,WCEpBC,EAAb,4MACEd,MAAQ,CACNK,UAAWjB,EAAWE,gBACtByB,gBAAgB,GAHpB,EAMEC,UAAY,kBACV,EAAKN,SAAS,CAAEK,gBAAgB,KAPpC,EAUEE,UAAY,kBACV,EAAKP,SAAS,CAAEK,gBAAgB,KAXpC,EAcEG,YAAc,kBACZ,EAAKR,SAAS,CAAEL,UAAWjB,EAAWE,mBAf1C,4CAkBE,WACE,OACE,sBAAKqB,UAAU,aAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,cAACQ,EAAA,EAAD,CACER,UAAU,iCACVS,QAAQ,UACRC,QAASnB,KAAKc,UAHhB,kBAQA,cAACG,EAAA,EAAD,CACER,UAAU,iCACVS,QAAQ,UACRC,QAASnB,KAAKe,UAHhB,kBAQA,cAACE,EAAA,EAAD,CACER,UAAU,iCACVS,QAAQ,UACRC,QAASnB,KAAKgB,YAHhB,uBASDhB,KAAKF,MAAMe,gBAER,qBACEJ,UAAU,2CADZ,SAGE,eAACW,EAAA,EAAD,CACEX,UAAU,iDADZ,UAGE,cAAC,EAAD,CAAON,UAAWH,KAAKF,MAAMK,YAE7B,oBACEM,UAAU,0DADZ,SAOGT,KAAKF,MAAMK,wBAhE9B,GAAyBO,IAAMC,WCR/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4e990c57.chunk.js","sourcesContent":["export class Randomizer {\n  public static readonly names = [\n    'Arbiter',\n    'BEKA',\n    'Bodet',\n    'Edwards Signaling',\n    'EL',\n    'Galleon',\n    'Gorgy',\n    'Hager',\n    'Heol',\n    'RTK',\n    'Schweitzer',\n    'SIMEX',\n  ];\n\n  static getRandomName = () => {\n    return (Randomizer.names)[\n      Math.floor(Math.random() * Randomizer.names.length)\n    ];\n  };\n}\n","import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  // eslint-disable-next-line\n  getCurrentDate = () => (\n    new Date().toLocaleTimeString('en-GB')\n  );\n\n  timerId?: NodeJS.Timeout;\n\n  state = {\n    time: this.getCurrentDate(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate({ clockName }: Readonly<Props>) {\n    if (clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(\n        'Property (clockName) has been changed'\n        + `from ${clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  tick() {\n    this.setState({\n      time: this.getCurrentDate(),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <h2 className=\"Clock__time\">\n          {this.state.time}\n        </h2>\n      </div>\n    );\n  }\n}\n","import './App.scss';\n\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Randomizer } from './addons/Randomizer';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string;\n  isClockVisible: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: Randomizer.getRandomName(),\n    isClockVisible: true,\n  };\n\n  showClock = () => (\n    this.setState({ isClockVisible: true })\n  );\n\n  hideClock = () => (\n    this.setState({ isClockVisible: false })\n  );\n\n  renameClock = () => (\n    this.setState({ clockName: Randomizer.getRandomName() })\n  );\n\n  render() {\n    return (\n      <div className=\"App d-flex\">\n        <div className=\"App__controller me-5\">\n          <Button\n            className=\"App__controller-button d-block\"\n            variant=\"primary\"\n            onClick={this.showClock}\n          >\n            Show\n          </Button>\n\n          <Button\n            className=\"App__controller-button d-block\"\n            variant=\"primary\"\n            onClick={this.hideClock}\n          >\n            Hide\n          </Button>\n\n          <Button\n            className=\"App__controller-button d-block\"\n            variant=\"primary\"\n            onClick={this.renameClock}\n          >\n            Rename\n          </Button>\n        </div>\n\n        {this.state.isClockVisible\n          && (\n            <div\n              className=\"App__clock d-flex justify-content-center\"\n            >\n              <Card\n                className=\"App__clock-frame d-flex justify-content-center\"\n              >\n                <Clock clockName={this.state.clockName} />\n\n                <h1\n                  className=\"\n                    App__clock-manufacturer\n                    d-flex\n                    justify-content-center\n                  \"\n                >\n                  {this.state.clockName}\n                </h1>\n              </Card>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}